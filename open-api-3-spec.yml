openapi: 3.0.0
info:
  version: 1.0.0
  title: COVID-19 stats server
servers:
  - url: 'http://localhost:3000/api/v1'
  - url: 'https://covid-19.com/api/v1'
paths:
  /cases:
    get:
      summary: 'Returns total count for all types of cases'
      operationId: getCases
      tags:
        - cases
      parameters:
        - name: country
          in: query
          description: Country name
          required: false
          schema:
            type: string
      responses:
        '200':
          description: 'Number of total cases grouped by case types'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cases'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /cases/country/:type:
    get:
      summary: 'Returns total count for given case type with country'
      operationId: getCasesByCountry
      tags:
        - country
      parameters:
        - name: type
          in: path
          description: Case type
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'List of countries with given case types'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Country'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /cases/state/:type:
    get:
      summary: 'Returns total count for given case type with state'
      operationId: getCasesByState
      tags:
        - state
      parameters:
        - name: type
          in: path
          description: Case type
          required: true
          schema:
            type: string
        - name: country
          in: query
          description: Country name
          required: false
          schema:
            type: string
      responses:
        '200':
          description: 'List of state with given case types'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/State'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /refresh:
    get:
      summary: 'refresh data to latest and return latest date'
      operationId: getLatestDara
      tags:
        - refresh
      responses:
        '200':
          description: 'return refresh date'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Refresh'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    Cases:
      type: object
      required:
        - confirmed
        - deaths
        - recovered
      properties:
        confirmed:
          type: integer
          format: int64
        deaths:
          type: integer
          format: int64
        recovered:
          type: integer
          format: int64

    Country:
      type: array
      items:
        type: object
        required:
          - country
          - count
        properties:
          count:
            type: integer
            format: int64
          country:
            type: string

    State:
      type: array
      items:
        type: object
        required:
          - country
          - state
          - count
        properties:
          country:
            type: string
          state:
            type: string
          count:
            type: integer
            format: int64
    Refresh:
      type: object
      required:
        - message
        - lastUpdate
      properties:
        message:
          type: string
        lastUpdate:
          type: string

    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string